{"mappings":"AAAA,SAASA,EAAsBC,EAASC,GACtC,MAAMC,EAASF,EACZG,KACC,EACEC,SAASC,OACPA,EAAMC,SACNA,EACAC,WAAWC,KAAEA,EAAIC,KAAEA,IAErBC,UAAUC,KAAEA,EAAIC,QAAEA,MACd,gFACqCD,0DACAC,+FAEDJ,0DACHC,iGAEeJ,4EACAC,sBAGvDO,KAAK,IAER,OAAOZ,EAAYa,mBAAmB,YAAaZ,E,CCvBrDa,eAAeC,EAAeC,GAC5B,MAEMC,EAAYD,EAAWd,KAAIY,MAAMH,IACrC,MAAMO,QAAiBC,MAAM,uCAAeR,KAC5C,IAAKO,EAASE,GACZ,MAAM,IAAIC,MAAM,IAElB,OAAOH,EAASI,MAAM,IASxB,aANmBC,QAAQC,WAAWP,IAGnCQ,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvBC,SAAQ,EAACC,MAAEA,KAAYA,G,CCf5Bd,eAAee,EAAWC,GACxB,MAGMb,EAAYa,EAAI5B,KAAIY,MAAMiB,IAC9B,MAAMC,EAAS,IAAIC,gBAAgB,CACjCC,IAJY,kCAKZC,EAAGJ,EACHK,KAAM,OAEFlB,QAAiBC,MAAM,8CAA6Ba,KAC1D,IAAKd,EAASE,GACZ,MAAM,IAAIC,MAAMH,EAASmB,YAG3B,OAAOnB,EAASI,MAAM,IAOxB,aALmBC,QAAQC,WAAWP,IAEnCQ,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvBxB,KAAI,EAAC0B,MAAEA,KAAYA,G,CCpBxB,MAAMU,EAAO,CACXC,WAAYC,SAASC,cAAc,cACnCC,OAAQF,SAASC,cAAc,WAC/BE,OAAQH,SAASC,cAAc,YAC/BG,cAAeJ,SAASC,cAAc,mBACtCI,iBAAkBL,SAASC,cAAc,0BCA3CH,EAAKI,OAAOI,iBAAiB,SAG7B,SAAsBC,GAEpBT,EAAKM,cAAc/B,mBAAmB,YADvB,wD,IAHjByB,EAAKC,WAAWO,iBAAiB,UAOjC,SAAqBE,GACnBA,EAAEC,iBAEF,MACMjC,EADO,IAAIkC,SAASF,EAAEG,eACJC,OAAO,WAK/BrC,EAJwBC,EACrBS,QAAOd,GAAWA,IAClBT,KAAIS,GAAWA,EAAQ0C,QAAO,KAAO,OAGrCC,MAAKxC,MAAMI,IACV,MAAMqC,EAAWrC,EAAShB,KAAI,EAACsD,QAAEA,KAAcA,EAAQ,KAGvD1D,QAF6B+B,EAAW0B,GAEFjB,EAAKO,iBAAiB,IAE7DY,OAAMC,GAAOC,QAAQC,IAAIF,KACzBG,SAAQb,GAAKV,EAAKC,WAAWuB,S","sources":["src/helpers/createMarkup.js","src/helpers/getContriesApi.js","src/helpers/getWeatherApi.js","src/helpers/refs.js","src/index.js"],"sourcesContent":["function onCreateMarkupWeather(arrData, containerEl) {\n  const markup = arrData\n    .map(\n      ({\n        current: {\n          temp_c,\n          humidity,\n          condition: { text, icon },\n        },\n        location: { name, country },\n      }) => ` <ul class=\"weather-widget\">\n      <li class=\"weather-item weather-country\">${name}</li>\n      <li class=\"weather-item weather-capital\">${country}</li>\n      <ul class=\"weather-condition\">\n        <li><p class=\"weather-condition-text\">${text}</p></li>\n        <li><img class=\"weather-icon\" src=\"${icon}\" alt=\"ICON\" /></li>\n      </ul>\n      <li class=\"weather-item weather-temp\">Current temp: ${temp_c} &deg;C</li>\n      <li class=\"weather-item weather-humidity\">Humidity: ${humidity}</li>\n    </ul>`\n    )\n    .join('');\n\n  return containerEl.insertAdjacentHTML('beforeend', markup);\n}\n\nexport { onCreateMarkupWeather };\n","async function fetchCountries(arrCountry) {\n  const BASE_URL = 'https://restcountries.com/v3.1/name';\n\n  const responces = arrCountry.map(async country => {\n    const responce = await fetch(`${BASE_URL}/${country}`);\n    if (!responce.ok) {\n      throw new Error('');\n    }\n    return responce.json();\n  });\n\n  const data = await Promise.allSettled(responces);\n\n  const countryObj = data\n    .filter(({ status }) => status === 'fulfilled')\n    .flatMap(({ value }) => value);\n\n  return countryObj;\n}\n\nexport { fetchCountries };\n","async function getWeather(arr) {\n  const BASE_URL = `http://api.weatherapi.com/v1`;\n  const API_KEY = `de3d646b80f44831adc131731240809`;\n\n  const responces = arr.map(async city => {\n    const params = new URLSearchParams({\n      key: API_KEY,\n      q: city,\n      lang: 'uk',\n    });\n    const responce = await fetch(`${BASE_URL}//current.json?${params}`);\n    if (!responce.ok) {\n      throw new Error(responce.statusText);\n    }\n\n    return responce.json();\n  });\n  const data = await Promise.allSettled(responces);\n  const filerdWeather = data\n    .filter(({ status }) => status === 'fulfilled')\n    .map(({ value }) => value);\n\n  return filerdWeather;\n}\n\nexport { getWeather };\n","const refs = {\n  searchForm: document.querySelector('.js-search'),\n  addBtn: document.querySelector('.js-add'),\n  listEl: document.querySelector('.js-list'),\n  formContainer: document.querySelector('.form-container'),\n  weatherContainer: document.querySelector('.js-weather-container'),\n};\n\nexport { refs };\n","import { onCreateMarkupWeather } from './helpers/createMarkup';\nimport { fetchCountries } from './helpers/getContriesApi';\nimport { getWeather } from './helpers/getWeatherApi';\nimport { refs } from './helpers/refs';\n\nrefs.addBtn.addEventListener('click', onCountryAdd);\nrefs.searchForm.addEventListener('submit', onSearchBtn);\n\nfunction onCountryAdd(evt) {\n  const markup = `<input type=\"text\" name=\"country\" class=\"searhInput\">`;\n  refs.formContainer.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction onSearchBtn(e) {\n  e.preventDefault();\n  //   console.dir(e.target);\n  const data = new FormData(e.currentTarget);\n  const arrCountry = data.getAll('country');\n  const filteredCountry = arrCountry\n    .filter(country => country)\n    .map(country => country.replace(/ /g, ''));\n\n  fetchCountries(filteredCountry)\n    .then(async responce => {\n      const capitals = responce.map(({ capital }) => capital[0]); // чому стоїть 0 це щоб брати перший елемент масиву\n      const weatherService = await getWeather(capitals);\n\n      onCreateMarkupWeather(weatherService, refs.weatherContainer);\n    })\n    .catch(err => console.log(err))\n    .finally(e => refs.searchForm.reset());\n}\n"],"names":["$9ef9969977501943$export$6fd0b4d49536c5d3","arrData","containerEl","markup","map","current","temp_c","humidity","condition","text","icon","location","name","country","join","insertAdjacentHTML","async","$c747c383cdbc5a82$export$1d1c4391ecac81e8","arrCountry","responces","responce","fetch","ok","Error","json","Promise","allSettled","filter","status","flatMap","value","$c2540400ed33e9ad$export$ce1081f0c9899666","arr","city","params","URLSearchParams","key","q","lang","statusText","$61de6f5115c483c6$export$21666b427502ea6d","searchForm","document","querySelector","addBtn","listEl","formContainer","weatherContainer","addEventListener","evt","e","preventDefault","FormData","currentTarget","getAll","replace","then","capitals","capital","catch","err","console","log","finally","reset"],"version":3,"file":"index.d5077114.js.map"}